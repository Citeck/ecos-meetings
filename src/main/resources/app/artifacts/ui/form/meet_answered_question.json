{
  "id": "meet_answered_question",
  "formKey": "",
  "title": {
    "en": "Meeting Answered Question"
  },
  "description": {},
  "customModule": null,
  "typeRef": "",
  "width": "lg",
  "i18n": {
    "ru": {
      "question": "Вопрос"
    },
    "en": {
      "question": "Question"
    }
  },
  "definition": {
    "components": [
      {
        "label": {
          "ru": "askedQuestion"
        },
        "key": "askedQuestion",
        "validate": {
          "required": true
        },
        "clearOnHide": false,
        "dataSrc": "custom",
        "data": {
          "custom": "const questions = _.get(data, 'questions');\r\n\r\nif (_.isArray(questions)  && questions.length) {\r\n    values = questions;\r\n}\r\n"
        },
        "defaultValue": "",
        "refreshOn": [
          "questionRefs",
          "questions"
        ],
        "optionalWhenDisabled": false,
        "type": "ecosSelect",
        "input": true,
        "addAnother": "ecos.forms.btn.add-another"
      },
      {
        "label": {
          "ru": "answer"
        },
        "key": "answer",
        "validate": {
          "required": true
        },
        "defaultValue": "",
        "refreshOn": [],
        "optionalWhenDisabled": false,
        "rows": 2,
        "type": "textarea",
        "input": true
      },
      {
        "columns": [
          {
            "components": [
              {
                "label": {
                  "ru": "Отмена",
                  "en": "Cancel"
                },
                "key": "cancel",
                "action": "event",
                "state": "",
                "showValidations": false,
                "event": "cancel",
                "block": true,
                "refreshOn": [],
                "optionalWhenDisabled": false,
                "type": "button",
                "input": true
              }
            ],
            "md": 3,
            "type": "column",
            "input": false,
            "key": "column",
            "label": "Column",
            "index": 0,
            "clearOnHide": true,
            "conditional": {
              "show": null,
              "when": null
            }
          },
          {
            "md": 3,
            "type": "column",
            "input": false,
            "key": "column",
            "label": "Column",
            "index": 1,
            "components": [],
            "clearOnHide": true,
            "conditional": {
              "show": null,
              "when": null
            }
          },
          {
            "md": 3,
            "type": "column",
            "input": false,
            "key": "column",
            "label": "Column",
            "index": 2,
            "components": [],
            "clearOnHide": true,
            "conditional": {
              "show": null,
              "when": null
            }
          },
          {
            "md": 3,
            "type": "column",
            "input": false,
            "key": "column",
            "label": "Column",
            "index": 3,
            "components": [
              {
                "label": {
                  "en": "Submit",
                  "ru": "Принять"
                },
                "key": "submit",
                "state": "",
                "theme": "primary",
                "block": true,
                "disableOnInvalid": true,
                "refreshOn": [],
                "optionalWhenDisabled": false,
                "type": "button",
                "input": true
              }
            ],
            "clearOnHide": true,
            "conditional": {
              "show": null,
              "when": null
            }
          }
        ],
        "key": "columns2",
        "type": "columns",
        "input": false
      },
      {
        "label": "questionRefs",
        "source": {
          "type": "custom",
          "custom": {
            "syncData": "const childAgenda = _.get(instance, \n'options.parentForm.options.parentForm.data.childAgenda', []);\n\nvalue = _.isArray(childAgenda) ? childAgenda[0] : childAgenda;",
            "asyncData": "value = Citeck.Records.get(data).load('childQuestions[]?assoc');"
          },
          "forceLoad": false
        },
        "update": {
          "type": "once"
        },
        "key": "questionRefs",
        "type": "asyncData",
        "input": true,
        "addAnother": "ecos.forms.btn.add-another"
      },
      {
        "label": "questions",
        "source": {
          "type": "recordsScript",
          "recordsScript": {
            "script": "var questionRefs = _.get(data, 'questionRefs', []);\nconst selectedRef = _.get(data, 'askedQuestion', '');\n\nquestionRefs = _.isArray(questionRefs) ? questionRefs : [];\n\nif (!!selectedRef && !questionRefs.includes(selectedRef)) {\n  questionRefs.push(selectedRef);\n}\nvalue = questionRefs;\n",
            "attributes": {
              "label": "question",
              "value": "?id"
            }
          },
          "forceLoad": false
        },
        "update": {
          "type": "once"
        },
        "refreshOn": [
          {
            "label": "questionRefs",
            "value": "questionRefs"
          }
        ],
        "key": "questions",
        "type": "asyncData",
        "input": true,
        "addAnother": "ecos.forms.btn.add-another"
      }
    ]
  },
  "attributes": {}
}
