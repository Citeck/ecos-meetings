{
  "id": "meet_meeting",
  "formKey": "",
  "title": {
    "en": "Meeting form"
  },
  "description": {},
  "customModule": null,
  "typeRef": "",
  "width": "lg",
  "i18n": {
    "ru": {
      "create": "Создать",
      "issue": "Вопрос",
      "speakers": "Докладчики",
      "agenda": "Повестка",
      "protocol": "Протокол",
      "askedQuestion": "Вопрос",
      "answer": "Решение"
    },
    "en": {
      "create": "Create",
      "issue": "Issue",
      "speakers": "Speakers",
      "agenda": "Agenda",
      "protocol": "Protocol",
      "askedQuestion": "Issue",
      "answer": "Decision"
    }
  },
  "definition": {
    "components": [
      {
        "columns": [
          {
            "components": [
              {
                "label": {
                  "ru": "initiator"
                },
                "key": "initiator",
                "validate": {
                  "required": true
                },
                "allowedAuthorityType": "USER",
                "currentUserByDefault": true,
                "defaultValue": "",
                "refreshOn": [],
                "optionalWhenDisabled": false,
                "type": "selectOrgstruct",
                "input": true
              }
            ],
            "type": "column",
            "input": false,
            "key": "column",
            "label": "Column",
            "index": 0,
            "clearOnHide": true,
            "conditional": {
              "show": null,
              "when": null
            }
          },
          {
            "index": 1,
            "type": "column",
            "input": false,
            "key": "column",
            "label": "Column",
            "components": [
              {
                "label": {
                  "ru": "meetDateTime"
                },
                "key": "meetDateTime",
                "format": "dd.MM.yyyy HH:mm",
                "datePicker": {
                  "minDate": "",
                  "maxDate": ""
                },
                "timePicker": {
                  "showMeridian": false
                },
                "defaultValue": "",
                "refreshOn": [],
                "optionalWhenDisabled": false,
                "logic": [
                  {
                    "name": "requirement",
                    "trigger": {
                      "type": "javascript",
                      "javascript": "const formMode = _.get(instance, 'options.formMode', '');\n\nresult = formMode != \"CREATE\";"
                    },
                    "actions": [
                      {
                        "name": "setRequired",
                        "type": "property",
                        "property": {
                          "label": "Required",
                          "value": "validate.required",
                          "type": "boolean"
                        },
                        "state": "true"
                      }
                    ]
                  }
                ],
                "type": "datetime",
                "input": true,
                "suffix": true
              }
            ],
            "clearOnHide": true,
            "conditional": {
              "show": null,
              "when": null
            }
          }
        ],
        "key": "columns2",
        "type": "columns",
        "input": false
      },
      {
        "label": {
          "ru": "meetPlace"
        },
        "key": "meetPlace",
        "defaultValue": "",
        "refreshOn": [],
        "optionalWhenDisabled": false,
        "type": "textfield",
        "input": true
      },
      {
        "label": {
          "ru": "subject"
        },
        "key": "subject",
        "defaultValue": "",
        "refreshOn": [],
        "optionalWhenDisabled": false,
        "type": "textfield",
        "input": true
      },
      {
        "label": {
          "ru": "participants"
        },
        "key": "participants",
        "multiple": true,
        "reorder": false,
        "defaultValue": [],
        "refreshOn": [],
        "optionalWhenDisabled": false,
        "type": "selectOrgstruct",
        "input": true,
        "addAnother": "ecos.forms.btn.add-another"
      },
      {
        "label": {
          "ru": "Panel"
        },
        "key": "agenda",
        "title": "agenda",
        "refreshOn": [],
        "optionalWhenDisabled": false,
        "customConditional": "const formMode = _.get(instance, 'options.formMode', '');\n\nshow = formMode != 'CREATE';",
        "type": "panel",
        "input": false,
        "addAnother": "ecos.forms.btn.add-another",
        "components": [
          {
            "label": {
              "ru": "issues"
            },
            "key": "issues",
            "multiple": true,
            "source": {
              "type": "custom",
              "custom": {
                "columns": [
                  {
                    "name": "question",
                    "formatter": "",
                    "setAttributesManually": true,
                    "title": "issue",
                    "type": "assoc",
                    "multiple": true
                  },
                  {
                    "name": "plannedReporters",
                    "formatter": "value = {\r\n  type: 'script', \r\n  config: {\r\n    fn: ({ Records, cell, _ }) => {\r\n      const result = Records.get(cell).toJson().attributes[\"\"];\r\n\r\n      return _.isUndefined(result) ? cell : result;\r\n    }\r\n  }\r\n}",
                    "setAttributesManually": true,
                    "title": "speakers",
                    "type": "person",
                    "multiple": true
                  }
                ],
                "record": null,
                "attribute": null
              }
            },
            "refreshOn": [],
            "optionalWhenDisabled": false,
            "type": "tableForm",
            "input": true,
            "addAnother": "ecos.forms.btn.add-another",
            "reorder": false
          }
        ]
      },
      {
        "label": {
          "ru": "Panel"
        },
        "key": "protocol",
        "title": "protocol",
        "refreshOn": [],
        "optionalWhenDisabled": false,
        "customConditional": "const formMode = _.get(instance, 'options.formMode', '');\n\nshow = formMode != 'CREATE';",
        "type": "panel",
        "input": false,
        "addAnother": "ecos.forms.btn.add-another",
        "components": [
          {
            "label": {
              "ru": "Columns"
            },
            "key": "columns",
            "columns": [
              {
                "components": [
                  {
                    "label": {
                      "ru": "present"
                    },
                    "key": "present",
                    "defaultValue": "",
                    "refreshOn": [],
                    "optionalWhenDisabled": false,
                    "type": "selectOrgstruct",
                    "input": true,
                    "addAnother": "ecos.forms.btn.add-another"
                  }
                ],
                "type": "column",
                "input": false,
                "key": "column",
                "index": 0
              },
              {
                "index": 1,
                "type": "column",
                "input": false,
                "key": "column",
                "components": [
                  {
                    "label": {
                      "ru": "absent"
                    },
                    "key": "absent",
                    "defaultValue": "",
                    "refreshOn": [],
                    "optionalWhenDisabled": false,
                    "type": "selectOrgstruct",
                    "input": true,
                    "addAnother": "ecos.forms.btn.add-another"
                  }
                ]
              }
            ],
            "oneColumnInViewMode": false,
            "type": "columns",
            "input": false,
            "addAnother": "ecos.forms.btn.add-another"
          },
          {
            "label": {
              "ru": "decisions"
            },
            "key": "decisions",
            "multiple": true,
            "source": {
              "type": "custom",
              "custom": {
                "columns": [
                  {
                    "name": "askedQuestion",
                    "formatter": "value = {\n  type: 'script', \n  config: {\n    fn: ({ Records, cell, _ }) => {\n      const result = Records.get(cell).toJson().attributes.question;\n      \n      return _.isUndefined(result) ? cell : result;\n    }\n  }\n}",
                    "setAttributesManually": true,
                    "title": "askedQuestion",
                    "type": "assoc",
                    "multiple": false
                  },
                  {
                    "name": "answer",
                    "formatter": "",
                    "setAttributesManually": true,
                    "title": "answer",
                    "type": "text",
                    "multiple": false
                  }
                ],
                "record": null,
                "attribute": null
              }
            },
            "refreshOn": [],
            "optionalWhenDisabled": false,
            "type": "tableForm",
            "input": true,
            "addAnother": "ecos.forms.btn.add-another",
            "reorder": false
          },
          {
            "label": {
              "ru": "commentDecision"
            },
            "key": "commentDecision",
            "defaultValue": "",
            "refreshOn": [],
            "optionalWhenDisabled": false,
            "type": "textarea",
            "input": true,
            "addAnother": "ecos.forms.btn.add-another"
          }
        ]
      },
      {
        "columns": [
          {
            "components": [
              {
                "label": {
                  "en": "Cancel",
                  "ru": "Отмена"
                },
                "key": "cancel",
                "action": "event",
                "state": "",
                "showValidations": false,
                "event": "cancel",
                "block": true,
                "refreshOn": [],
                "optionalWhenDisabled": false,
                "type": "button",
                "input": true
              }
            ],
            "md": 3,
            "type": "column",
            "input": false,
            "key": "column",
            "label": "Column",
            "index": 0,
            "clearOnHide": true,
            "conditional": {
              "show": null,
              "when": null
            }
          },
          {
            "md": 3,
            "type": "column",
            "input": false,
            "key": "column",
            "label": "Column",
            "index": 1,
            "components": [],
            "clearOnHide": true,
            "conditional": {
              "show": null,
              "when": null
            }
          },
          {
            "md": 3,
            "type": "column",
            "input": false,
            "key": "column",
            "label": "Column",
            "index": 2,
            "components": [],
            "clearOnHide": true,
            "conditional": {
              "show": null,
              "when": null
            }
          },
          {
            "md": 3,
            "type": "column",
            "input": false,
            "key": "column",
            "label": "Column",
            "index": 3,
            "components": [
              {
                "label": {
                  "ru": "Принять",
                  "en": "Submit"
                },
                "key": "submit",
                "state": "",
                "theme": "primary",
                "block": true,
                "disableOnInvalid": true,
                "refreshOn": [],
                "optionalWhenDisabled": false,
                "logic": [
                  {
                    "name": "createState",
                    "trigger": {
                      "type": "javascript",
                      "javascript": "const formMode = _.get(instance, 'options.formMode', '');\n\nresult = formMode == 'CREATE' ? true : false;"
                    },
                    "actions": [
                      {
                        "name": "setCreate",
                        "type": "property",
                        "property": {
                          "label": "Label",
                          "value": "label",
                          "type": "string"
                        },
                        "text": "create"
                      }
                    ]
                  }
                ],
                "type": "button",
                "input": true
              }
            ],
            "clearOnHide": true,
            "conditional": {
              "show": null,
              "when": null
            }
          }
        ],
        "key": "columns3",
        "type": "columns",
        "input": false
      },
      {
        "label": "caseStatus",
        "source": {
          "type": "custom",
          "custom": {
            "syncData": "value = recordId.replace(/-alias-\\d+/, \"\");",
            "asyncData": "value = Citeck.Records.get(data).load('_status?str');"
          },
          "forceLoad": false
        },
        "update": {
          "type": "any-change"
        },
        "executionCondition": "const formMode = _.get(instance, 'options.formMode', '');\n\nvalue = formMode == 'EDIT';",
        "key": "caseStatus",
        "type": "asyncData",
        "input": true,
        "conditional": {
          "show": null,
          "when": null
        }
      }
    ]
  },
  "attributes": {}
}
