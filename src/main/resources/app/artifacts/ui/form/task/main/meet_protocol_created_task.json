{
  "id": "meet_protocol_created_task",
  "formKey": "",
  "title": {
    "en": "Meeting Protocol Created Task"
  },
  "description": {},
  "customModule": null,
  "typeRef": "",
  "width": "lg",
  "i18n": {
    "ru": {
      "participants": "Присутствовали",
      "absent": "Отсутствовали",
      "answeredQuestions": "Решения"
    },
    "en": {
      "participants": "Participants",
      "absent": "Absent",
      "answeredQuestions": "Answers"
    }
  },
  "definition": {
    "components": [
      {
        "label": {
          "ru": "Протокол совещания",
          "en": "Meeting protocol"
        },
        "key": "_ECM_childProtocol",
        "validate": {
          "required": true
        },
        "source": {
          "type": "custom",
          "custom": {
            "columns": [
              {
                "name": "participants",
                "formatter": "value = {\r\n  type: 'script', \r\n  config: {\r\n    fn: ({ Records, cell, _ }) => {\r\n      const result = Records.get(cell).toJson().attributes[\"\"];\r\n\r\n      return _.isUndefined(result) ? cell : result;\r\n    }\r\n  }\r\n}",
                "setAttributesManually": true,
                "title": "participants",
                "type": "assoc",
                "multiple": false
              },
              {
                "name": "absent",
                "formatter": "value = {\r\n  type: 'script', \r\n  config: {\r\n    fn: ({ Records, cell, _ }) => {\r\n      const result = Records.get(cell).toJson().attributes[\"\"];\r\n\r\n      return _.isUndefined(result) ? cell : result;\r\n    }\r\n  }\r\n}",
                "setAttributesManually": true,
                "title": "absent",
                "type": "assoc",
                "multiple": false
              },
              {
                "name": "answeredQuestions",
                "formatter": "value = {\r\n  type: 'script', \r\n  config: {\r\n    fn: ({ Records, cell, _ }) => {\r\n      const result = Records.get(cell).toJson().attributes.answer;\r\n\r\n      return _.isUndefined(result) ? cell : result;\r\n    }\r\n  }\r\n}",
                "setAttributesManually": true,
                "title": "answeredQuestions",
                "type": "assoc",
                "multiple": false
              }
            ],
            "record": null,
            "attribute": null
          }
        },
        "customCreateVariantsJs": "value = [\r\n{\r\n   \"recordRef\": \"emodel/t-meet-protocol@\",\r\n   \"typeRef\": \"emodel/type@meet-protocol\",\r\n   \"formRef\": \"uiserv/form@meet_protocol\",\r\n   \"label\": {\"ru\":\"Создать\"}\r\n}\r\n]",
        "refreshOn": [],
        "optionalWhenDisabled": false,
        "type": "tableForm",
        "input": true,
        "addAnother": "ecos.forms.btn.add-another"
      },
      {
        "label": {
          "en": "Protocol created",
          "ru": "Протокол создан"
        },
        "key": "outcome_protocol_created",
        "state": "",
        "theme": "primary",
        "disableOnInvalid": true,
        "refreshOn": [],
        "optionalWhenDisabled": false,
        "type": "button",
        "input": true
      },
      {
        "key": "_ECM_childAgenda",
        "refreshOn": [],
        "optionalWhenDisabled": false,
        "type": "hidden",
        "input": true,
        "addAnother": "ecos.forms.btn.add-another"
      },
      {
        "key": "agenda",
        "refreshOn": [
          "_ECM_childAgenda"
        ],
        "calculateValue": "value = _.get(data, '_ECM_childAgenda', []);",
        "optionalWhenDisabled": false,
        "type": "hidden",
        "input": true,
        "addAnother": "ecos.forms.btn.add-another"
      }
    ]
  },
  "attributes": {}
}
